plugins {
    id "com.android.application"
    id "kotlin-android"
    id "com.google.gms.google-services" // Firebase services plugin
    id "dev.flutter.flutter-gradle-plugin" // Flutter Gradle plugin
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode") ?: "1"
def flutterVersionName = localProperties.getProperty("flutter.versionName") ?: "1.0"

android {
    namespace = "com.example.management_church"
    compileSdkVersion 34

    defaultConfig {
        applicationId "com.example.management_church"
        minSdkVersion 21 // Minimum Android SDK version
        targetSdkVersion 33 // Target Android SDK version
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        multiDexEnabled true // Enable multidex for large applications
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            // Debug-specific configurations
            signingConfig signingConfigs.debug
        }
        release {
            // Release-specific configurations
            minifyEnabled false // Disable code shrinking for now
            shrinkResources false // Disable resource shrinking for now
            signingConfig signingConfigs.debug // Use debug signing for now
        }
    }

    ndkVersion flutter.ndkVersion // Use Flutter-provided NDK version
}

flutter {
    source "../.." // Flutter source path
}

// Apply Google Services plugin for Firebase integration
apply plugin: 'com.google.gms.google-services'

// Optional: Enable lint checks for deprecated code
tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
}
